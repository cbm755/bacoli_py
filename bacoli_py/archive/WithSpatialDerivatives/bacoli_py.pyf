!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module bacoli__user__routines 
    interface f
        subroutine f(t, x, u, ux, uxx, fval, npde)
            integer,intent(in) :: npde
            real(kind=8),intent(in) :: t
            real(kind=8),intent(in) :: x
            real(kind=8),dimension(npde),intent(in) :: u
            real(kind=8),dimension(npde),intent(in) :: ux
            real(kind=8),dimension(npde),intent(in) :: uxx
            real(kind=8),dimension(npde),intent(in,out,copy) :: fval
        end subroutine f
    end interface f

    interface derivf
        subroutine derivf(t, x, u, ux, uxx, dfdu, dfdux, dfduxx, npde)
            integer,intent(in) :: npde
            real(kind=8),intent(in) :: t
            real(kind=8),intent(in) :: x
            real(kind=8),dimension(npde),intent(in) :: u
            real(kind=8),dimension(npde),intent(in) :: ux
            real(kind=8),dimension(npde),intent(in) :: uxx
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dfdu
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dfdux
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dfduxx
        end subroutine derivf
    end interface derivf

    interface bndxa
        subroutine bndxa(t, u, ux, bval, npde)
            integer,intent(in) :: npde
            real(kind=8),intent(in) :: t
            real(kind=8),dimension(npde),intent(in) :: u
            real(kind=8),dimension(npde),intent(in) :: ux
            real(kind=8),dimension(npde),intent(in,out,copy) :: bval
        end subroutine bndxa
    end interface bndxa

    interface bndxb
        subroutine bndxb(t, u, ux, bval, npde)
            integer,intent(in) :: npde
            real(kind=8),intent(in) :: t
            real(kind=8),dimension(npde),intent(in) :: u
            real(kind=8),dimension(npde),intent(in) :: ux
            real(kind=8),dimension(npde),intent(in,out,copy) :: bval
        end subroutine bndxb
    end interface bndxb
    
    interface difbxa
        subroutine difbxa(t, u, ux, dbdu, dbdux, dbdt, npde)
            integer,intent(in) :: npde
            real(kind=8),intent(in) :: t
            real(kind=8),dimension(npde),intent(in) :: u
            real(kind=8),dimension(npde),intent(in) :: ux
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dbdu
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dbdux
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dbdt
        end subroutine difbxa
    end interface difbxa

    interface difbxb
        subroutine difbxb(t, u, ux, dbdu, dbdux, dbdt, npde)
            integer,intent(in) :: npde
            real(kind=8),intent(in) :: t
            real(kind=8),dimension(npde),intent(in) :: u
            real(kind=8),dimension(npde),intent(in) :: ux
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dbdu
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dbdux
            real(kind=8),dimension(npde,npde),intent(in,out,copy) :: dbdt
        end subroutine difbxb
    end interface difbxb

    interface uinit
        subroutine uinit(x, u, npde)
            integer,intent(in) :: npde
            real(kind=8),intent(in) :: x
            real(kind=8),dimension(npde),intent(in,out,copy) :: u
        end subroutine uinit
    end interface 
end python module bacoli__user__routines 

python module bacoli95_interface ! in 
    interface  ! in :bacoli95_interface
        module bacoli95_interface ! in :bacoli95_interface:bacoli95-interface.f95
            use bacoli95_mod
            integer :: num_cold_restarts
            integer :: prev_bdf_order
            integer dimension(12) :: mflag
            integer :: maxord
            integer :: nint_max
            real(kind=8), allocatable,dimension(:) :: atol
            real(kind=8) :: ini_ss
            integer :: num_remeshings
            integer :: num_ini_remeshings
            integer :: nint
            real(kind=8) :: prev_time_step_size
            integer :: kcol
            real(kind=8) :: t0
            real(kind=8), allocatable,dimension(:) :: rtol
            integer :: estimator
            real(kind=8), allocatable,dimension(:) :: y
            real(kind=8), allocatable,dimension(:) :: x
            integer :: num_accepted_time_steps
            integer :: idid
            integer :: npde
            subroutine bacoli95_init_wrap(npde,x,x_size,tstart,atol,atol_size,is_atol,rtol,rtol_size,is_rtol,kcol,nint_max,estimator,dirichlet,maxord,ini_ss) ! in :bacoli95_interface:bacoli95-interface.f95:bacoli95_interface
                integer intent(in) :: npde
                real(kind=8) dimension(x_size),intent(in) :: x
                integer, optional,intent(hide),depend(x) :: x_size=len(x)
                real(kind=8) intent(in) :: tstart
                real(kind=8) dimension(atol_size),intent(in) :: atol
                integer, optional,intent(hide),depend(atol) :: atol_size=len(atol)
                logical intent(in) :: is_atol
                real(kind=8) dimension(rtol_size),intent(in) :: rtol
                integer, optional,intent(hide),depend(rtol) :: rtol_size=len(rtol)
                logical intent(in) :: is_rtol
                integer intent(in) :: kcol
                integer intent(in) :: nint_max
                integer intent(in) :: estimator
                integer intent(in) :: dirichlet
                integer intent(in) :: maxord
                real(kind=8) intent(in) :: ini_ss
            end subroutine bacoli95_init_wrap
            subroutine bacoli95_wrap(output_time,f,bndxa,bndxb,uinit,derivf,is_derivf,difbxa,is_difbxa,difbxb,is_difbxb,tstop,nsteps) ! in :bacoli95_interface:bacoli95-interface.f95:bacoli95_interface
                use  bacoli__user__routines
                real(kind=8) intent(in) :: output_time
                external f
                external bndxa
                external bndxb
                external uinit
                external derivf
                optional derivf
                logical :: is_derivf
                external difbxa
                optional difbxa
                logical :: is_difbxa
                external difbxb
                optional difbxb
                logical :: is_difbxb
                real(kind=8) intent(in) :: tstop
                integer intent(in) :: nsteps
            end subroutine bacoli95_wrap
            subroutine bacoli95_vals_rank2_wrap(uout,xout,xout_size,nderiv) ! in :bacoli95_interface:bacoli95-interface.f95:bacoli95_interface
                real(kind=8), allocatable,dimension(:,:),intent(in,out) :: uout
                real(kind=8) dimension(xout_size),intent(in) :: xout
                integer, optional,intent(hide),depend(xout) :: xout_size=len(xout)
                integer intent(in) :: nderiv
            end subroutine bacoli95_vals_rank2_wrap
            subroutine bacoli95_vals_rank3_wrap(uout,xout,xout_size,nderiv) ! in :bacoli95_interface:bacoli95-interface.f95:bacoli95_interface
                real(kind=8), allocatable,dimension(:,:,:),intent(in,out) :: uout
                real(kind=8) dimension(xout_size),intent(in) :: xout
                integer, optional,intent(hide),depend(xout) :: xout_size=len(xout)
                integer intent(in) :: nderiv
            end subroutine bacoli95_vals_rank3_wrap
            subroutine unpack_sol_parameters ! in :bacoli95_interface:bacoli95-interface.f95:bacoli95_interface
            end subroutine unpack_sol_parameters
        end module bacoli95_interface
    end interface 
end python module bacoli95_interface

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
